{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useState","React","styles","container","display","flexDirection","minHeight","backgroundColor","card","margin","padding","borderRadius","width","height","section","justifyContent","App","cards","Card","cardValue","type","isSelected","select","classes","className","style","onClick","color","map","it","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGOA,EAAYC,IAAZD,SAmCP,IAAME,EAAS,CACXC,UAAW,CACPC,QAAS,OACTC,cAAe,SACfC,UAAW,QACXC,gBAAiB,WAErBC,KAAM,CACFC,OAAQ,GACRC,QAAS,GACTC,aAAc,GACdC,MAAO,KACPC,OAAQ,MAEZC,QAAS,CACLV,QAAS,OACTW,eAAgB,SAChBV,cAAe,QAIRW,EAtDf,WACI,IAAIC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAG/BC,EAAO,SAACC,EAAmBC,GAAkB,IAAD,EACjBpB,GAAS,GADQ,mBACvCqB,EADuC,KAC3BC,EAD2B,KAExCC,EAAO,UAAMH,EAAN,YAAcC,EAAa,WAAa,GAAxC,KACb,OAAO,sBAAKG,UAAWD,EAASE,MAAOvB,EAAOM,KAClCkB,QAAS,WACLJ,GAAQD,IAFjB,cAGUF,EAHV,QAKX,OACI,qBAAKK,UAAU,MAAf,SACI,sBAAKC,MAAOvB,EAAOC,UAAnB,UACI,oBAAIsB,MAAO,CAACE,MAAO,SAAnB,sBACA,qBAAKF,MAAOvB,EAAOY,QAAnB,SAbE,CAAC,EAAG,EAAG,EAAG,GAcCc,KAAI,SAAAC,GACT,OAAOX,EAAKW,EAAI,eAhBlB,CAAC,OAAQ,OAAQ,SAAU,SAmBpBD,KAAI,SAAAD,GACb,OAAO,qBAAKF,MAAOvB,EAAOY,QAAnB,SACFG,EAAMW,KAAI,SAAAC,GACP,OAAOX,EAAKW,EAAIF,iBCf7BG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.427b3805.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst {useState} = React;\n\nfunction App() {\n    let cards = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    let cardsColors = ['pink', 'blue', 'yellow', 'green']\n    let rockets = [1, 2, 3, 4]\n    const Card = (cardValue: number, type: string) => {\n        const [isSelected, select] = useState(false)\n        const classes = `${type} ${isSelected ? 'selected' : ''} `\n        return <div className={classes} style={styles.card}\n                    onClick={() => {\n                        select(!isSelected);\n                    }}> {cardValue} </div>\n    }\n    return (\n        <div className=\"App\">\n            <div style={styles.container}>\n                <h2 style={{color: 'white'}}>The Crew</h2>\n                <div style={styles.section}>\n                    {rockets.map(it => {\n                        return Card(it, 'rocket')\n                    })}\n                </div>\n                {cardsColors.map(color => {\n                    return <div style={styles.section}>\n                        {cards.map(it => {\n                            return Card(it, color)\n                        })}\n                    </div>\n                })}\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        backgroundColor: '#282c34',\n    } as React.CSSProperties,\n    card: {\n        margin: 10,\n        padding: 20,\n        borderRadius: 10,\n        width: '25',\n        height: '50',\n    } as React.CSSProperties,\n    section: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row',\n    } as React.CSSProperties\n\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}